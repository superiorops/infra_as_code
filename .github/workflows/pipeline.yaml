name:  BuildInfra
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
  push:
   branches:
     - main
     - release/*
env:
  ENV: "dev"
  TF_STATE_RG: "infrabase" 
  TF_STORAGE_ACCOUNT_PREFIX: "demotf"
  LOCATION: "eastus"
  TF_CONTAINER: "tfstate"
  FIRST_RUN: True
jobs:

  azure-test:    
    runs-on: "ubuntu-22.04"
    environment: AZ-DEV
    steps:
      # - name: Checking source code  
      #   uses: actions/checkout@v3

      # - name: Loading Environmnet variables
      #   shell: bash
      #   run: |
      #     while read line; do
      #       echo "$line" >>$GITHUB_ENV
      #     done < ./dev.env
      
      # - name: print env variables 
      #   env:
      #     TF_STATE_RG: ${{ env.TF_STATE_RG }}  
      #     USERNAME: ${{ env.username }}      
      #   run: |
      #     while read line; do
      #       echo "$line" 
      #     done < $GITHUB_ENV && \
      #     echo env && \
      #     echo ${{ env.TF_STATE_RG }} ${{ env.username }} $TF_STATE_RG   
      
      # - name: AZ Login
      #   uses: azure/login@v1
      #   with:
      #     creds: '${{ secrets.AZ_CREDENTIALS }}'
            
      # # Set up remote backend for Terraform State.

      # - name: prebuild
      #   if: ${{ env.FIRST_RUN == 'True' }}
      #   run: |
      #      bash ./pre-build.sh
      #   # env:
      #   #   ENV: ${{ env.ENV }}
      #   #   TF_STATE_RG: ${{ env.TF_STATE_RG }}
      #   #   TF_STORAGE_ACCOUNT_PREFIX: ${{ env.TF_STORAGE_ACCOUNT_PREFIX }}
      #   #   LOCATION: ${{ env.LOCATION }}
      # - name: check tfvars file
      #   run: cat TF/terraform.tfvars


      - name: check AzureKey
        env:
          pub_key: ${{ env.PUB_KEY }}    
        run: |
           echo $pub_key && \
           echo $pub_key >> id_az.pub
        # env:
        #   ENV: ${{ env.ENV }}
        #   TF_STATE_RG: ${{ env.TF_STATE_RG }}
        #   TF_STORAGE_ACCOUNT_PREFIX: ${{ env.TF_STORAGE_ACCOUNT_PREFIX }}
        #   LOCATION: ${{ env.LOCATION }}
      
      # # Install the preferred version of Terraform CLI 
      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v1
      #   with:
      #     terraform_version: 1.3.7
      
      # # Run Terraform Init

      # - name: run Terraform
      #   timeout-minutes: 3
      #   id: init
      #   run: terraform init && terraform apply --auto-approve
      #   env:
      #     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      #     ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      #     ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     RESOURCE_GROUP: ${{ env.TF_STATE_RG }}
      #     STORAGE_ACCOUNT: "${{ env.TF_STORAGE_ACCOUNT }}"
      #     CONTAINER_NAME: ${{ env.TF_CONTAINER }}
      #   working-directory: TF

      # - name: run Terraform
      #   timeout-minutes: 5 
      #   id: apply
      #   run: terraform apply --auto-approve
      #   env:
      #     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      #     ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      #     ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     RESOURCE_GROUP: ${{ env.TF_STATE_RG }}
      #     STORAGE_ACCOUNT: "${{ env.TF_STORAGE_ACCOUNT }}"
      #     CONTAINER_NAME: ${{ env.TF_CONTAINER }}
      #   working-directory: TF

